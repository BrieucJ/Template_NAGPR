{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Layout.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Footer from './Footer';\nimport Header from './Header'; //STYLING\n\nimport { Container, ThemeProvider, Button } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nconst [theme, setTheme] = useState({\n  palette: {\n    type: \"light\"\n  }\n}); // we change the palette type of the theme in state\n\nconst toggleDarkTheme = () => {\n  let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n  setTheme({\n    palette: {\n      type: newPaletteType\n    }\n  });\n}; // we generate a MUI-theme from state's theme object\n\n\nconst muiTheme = createMuiTheme(theme);\n\nclass Layout extends Component {\n  render() {\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Container, {\n      disableGutters: true,\n      maxWidth: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Primary\"), React.createElement(Button, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Secondary\"), this.props.children, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Layout);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Layout.js"],"names":["React","Component","withRouter","Footer","Header","Container","ThemeProvider","Button","createMuiTheme","theme","setTheme","useState","palette","type","toggleDarkTheme","newPaletteType","muiTheme","Layout","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,MAAnC,QAAiD,mBAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC;AACjCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC;AADwB,CAAD,CAAlC,C,CAMA;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5B,MAAIC,cAAc,GAAGN,KAAK,CAACG,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GAAiC,MAAjC,GAA0C,OAA/D;AACAH,EAAAA,QAAQ,CAAC;AACPE,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEE;AADC;AADF,GAAD,CAAR;AAKD,CAPD,C,CASA;;;AACA,MAAMC,QAAQ,GAAGR,cAAc,CAACC,KAAD,CAA/B;;AAKA,MAAMQ,MAAN,SAAqBhB,SAArB,CAA+B;AAC7BiB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAET,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,cAAc,MAAzB;AAA0B,MAAA,QAAQ,EAAE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIK,KAAKU,KAAL,CAAWC,QAJhB,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADA,CADF;AAWD;;AAb4B;;AAgB/B,eAAelB,UAAU,CAACe,MAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport Footer from './Footer'\nimport Header from './Header'\n//STYLING\nimport { Container, ThemeProvider, Button } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst [theme, setTheme] = useState({\n  palette: {\n    type: \"light\"\n  }\n});\n\n// we change the palette type of the theme in state\nconst toggleDarkTheme = () => {\n  let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n  setTheme({\n    palette: {\n      type: newPaletteType\n    }\n  });\n};\n\n// we generate a MUI-theme from state's theme object\nconst muiTheme = createMuiTheme(theme);\n\n\n\n\nclass Layout extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n      <Container disableGutters maxWidth={false} >\n        <Header/>\n        <Button color=\"primary\">Primary</Button>\n        <Button color=\"secondary\">Secondary</Button>\n          {this.props.children}\n        <Footer/>\n      </Container>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default withRouter(Layout)"]},"metadata":{},"sourceType":"module"}