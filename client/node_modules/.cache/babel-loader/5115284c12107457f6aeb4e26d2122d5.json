{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Auth.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { AUTH_TOKEN } from \"../utils/constants\";\nimport { Mutation, useMutation } from \"react-apollo\";\nimport gql from \"graphql-tag\"; //STYLING\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Container, Avatar, Card, Button, TextField, Link, Grid, Typography } from \"@material-ui/core\";\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token,\n      user{\n        id\n        name\n        email\n      }\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token,\n      user{\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n\n    this.confirm = async data => {\n      console.log('CONFIRM'); // const { token } = this.state.login ? data.login : data.signup;\n      // this._saveUserData(token);\n      // this.props.history.push(`/`);\n    };\n\n    this._confirm = async () => {// ... you'll implement this ðŸ”œ\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n\n    this.state = {\n      login: true,\n      email: \"\",\n      password: \"\",\n      name: \"\"\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Container, {\n      component: \"main\",\n      className: classes.root,\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, login ? \"Sign in\" : \"Sign Up\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, !login && React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      autoComplete: \"name\",\n      name: \"Name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"Name\",\n      label: \"Name\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }))), React.createElement(Mutation, {\n      mutation: login ? LOGIN_MUTATION : SIGNUP_MUTATION,\n      variables: {\n        email,\n        password,\n        name\n      },\n      onCompleted: data => {\n        console.log(data);\n        this.confirm(data);\n      },\n      onError: e => {\n        console.error(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, (mutation, {\n      loading,\n      error,\n      data,\n      called\n    }) => React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      onClick: e => {\n        e.preventDefault();\n        mutation();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, login ? \"Sign in\" : \"Sign Up\")), login ? React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Forgot password?\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      onClick: () => {\n        this.setState({\n          login: false\n        });\n      },\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\"))) : React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      onClick: () => {\n        this.setState({\n          login: true\n        });\n      },\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Already have an account? Sign in\")))))));\n  }\n\n}\n\nexport default withStyles(styles)(Auth);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Auth.js"],"names":["React","Component","Fragment","AUTH_TOKEN","Mutation","useMutation","gql","withStyles","Container","Avatar","Card","Button","TextField","Link","Grid","Typography","SIGNUP_MUTATION","LOGIN_MUTATION","styles","theme","root","display","justifyContent","alignItems","paper","flexDirection","card","padding","spacing","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Auth","constructor","props","_saveUserData","token","localStorage","setItem","confirm","data","console","log","_confirm","state","login","email","password","name","handleChange","e","setState","target","value","render","classes","error","mutation","loading","called","preventDefault"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { AUTH_TOKEN } from \"../utils/constants\";\nimport { Mutation, useMutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n//STYLING\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Avatar,\n  Card,\n  Button,\n  TextField,\n  Link,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token,\n      user{\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token,\n      user{\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: true,\n      email: \"\",\n      password: \"\",\n      name: \"\"\n    };\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token);\n  };\n\n  confirm = async (data) => {\n    console.log('CONFIRM')\n    // const { token } = this.state.login ? data.login : data.signup;\n    // this._saveUserData(token);\n    // this.props.history.push(`/`);\n  };\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { login, email, password, name } = this.state;\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" className={classes.root} maxWidth=\"xs\">\n        <Card className={classes.card}>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}></Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              {login ? \"Sign in\" : \"Sign Up\"}\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  {!login && (\n                    <TextField\n                      onChange={e => {\n                        this.handleChange(e);\n                      }}\n                      autoComplete=\"name\"\n                      name=\"Name\"\n                      variant=\"outlined\"\n                      required\n                      fullWidth\n                      id=\"Name\"\n                      label=\"Name\"\n                      autoFocus\n                    />\n                  )}\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    onChange={e => {\n                      this.handleChange(e);\n                    }}\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                  />\n                </Grid>\n              </Grid>\n              \n              <Mutation\n                mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n                variables={{ email, password, name }}\n                onCompleted={(data)=> {console.log(data); this.confirm(data)}}\n                onError={(e) => {console.error(e)}}\n            >\n              {(mutation, { loading, error, data, called }) => (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={(e) => {\n                  e.preventDefault()\n                  mutation()\n                }}\n              >\n                {login ? \"Sign in\" : \"Sign Up\"}\n              </Button>\n              )}\n              </Mutation>\n              {login ? (\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link\n                      href=\"#\"\n                      onClick={() => {\n          \n                        this.setState({ login: false });\n                      }}\n                      variant=\"body2\"\n                    >\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              ) : (\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link\n                      href=\"#\"\n                      onClick={() => {\n                        this.setState({ login: true });\n                      }}\n                      variant=\"body2\"\n                    >\n                      Already have an account? Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              )}\n            </form>\n          </div>\n        </Card>\n      </Container>\n    );\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this ðŸ”œ\n  };\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token);\n  };\n}\n\nexport default withStyles(styles)(Auth);\n"]},"metadata":{},"sourceType":"module"}