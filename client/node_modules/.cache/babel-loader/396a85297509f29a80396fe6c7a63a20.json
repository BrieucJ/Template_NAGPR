{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Auth.js\";\nimport React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { UserConsumer } from './App'; //GQL\n\nimport { SIGNUP_MUTATION, LOGIN_MUTATION } from '../resolvers/Mutations'; //STYLING\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Container, Avatar, Card, Button, TextField, Link, Grid, Typography } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.confirm = async (data, context) => {\n      console.log('CONFIRM');\n      console.log(data);\n      const res = this.state.login ? data.login : data.signup;\n      context.setUser(res);\n      this.props.history.push(`/`);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n\n      if (this.state.errors[e.target.name].length !== 0) {\n        this.validator(e);\n      }\n    };\n\n    this.submit = mutation => {\n      console.log('SUBMIT');\n\n      if (this.state.errors.email.length === 0 && this.state.errors.name.length === 0 && this.state.errors.password.length === 0) {\n        console.log('MUTATE');\n        mutation();\n      }\n    };\n\n    this.validator = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'name':\n          errors.name = value.length < 5 ? 'Name must be 5 characters long!' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be 8 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors\n      });\n    };\n\n    this.state = {\n      login: true,\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      errors: {\n        email: '',\n        password: '',\n        name: ''\n      }\n    };\n  }\n\n  handleError(error) {\n    console.log(error);\n  }\n\n  render() {\n    const {\n      login,\n      name,\n      email,\n      password\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return React.createElement(UserConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, context => {\n      return React.createElement(Container, {\n        component: \"main\",\n        className: classes.root,\n        maxWidth: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, login ? \"Sign in\" : \"Sign Up\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, !login && React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        onBlur: this.validator,\n        error: this.state.errors.name.length !== 0,\n        helperText: this.state.errors.name,\n        autoComplete: \"name\",\n        name: \"name\",\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"Name\",\n        label: \"Name\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        onBlur: this.validator,\n        error: this.state.errors.email.length !== 0,\n        helperText: this.state.errors.email,\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        onBlur: this.validator,\n        error: this.state.errors.password.length !== 0,\n        helperText: this.state.errors.password,\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }))), React.createElement(Mutation, {\n        mutation: login ? LOGIN_MUTATION : SIGNUP_MUTATION,\n        variables: {\n          email,\n          password,\n          name\n        },\n        onCompleted: data => {\n          this.confirm(data, context);\n        },\n        onError: data => {\n          this.handleError(data.graphQLErrors[0]);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, (mutation, {\n        loading,\n        error,\n        data,\n        called\n      }) => React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: e => {\n          e.preventDefault();\n          this.submit(mutation); // mutation()\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, login ? \"Sign in\" : \"Sign Up\")), login ? React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Forgot password?\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            login: false\n          });\n        },\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Don't have an account? Sign Up\"))) : React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            login: true\n          });\n        },\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Already have an account? Sign in\")))))));\n    });\n  }\n\n}\n\nexport default withStyles(styles)(Auth);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Auth.js"],"names":["React","Component","Mutation","UserConsumer","SIGNUP_MUTATION","LOGIN_MUTATION","withStyles","Container","Avatar","Card","Button","TextField","Link","Grid","Typography","styles","theme","root","display","justifyContent","alignItems","paper","flexDirection","card","padding","spacing","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","validEmailRegex","RegExp","Auth","constructor","props","confirm","data","context","console","log","res","state","login","signup","setUser","history","push","handleChange","e","setState","target","name","value","errors","length","validator","mutation","email","password","test","handleError","error","render","classes","graphQLErrors","loading","called","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,YAAT,QAA6B,OAA7B,C,CACA;;AACA,SAAQC,eAAR,EAAyBC,cAAzB,QAA8C,wBAA9C,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,SALF,EAMEC,IANF,EAOEC,IAPF,EAQEC,UARF,QASO,mBATP;;AAWA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,UAAU,EAAE;AAHR,GADiB;AAMvBC,EAAAA,KAAK,EAAE;AACLH,IAAAA,OAAO,EAAE,MADJ;AAELI,IAAAA,aAAa,EAAE,QAFV;AAGLF,IAAAA,UAAU,EAAE;AAHP,GANgB;AAWvBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd;AADL,GAXiB;AAcvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEX,KAAK,CAACS,OAAN,CAAc,CAAd,CADF;AAENG,IAAAA,eAAe,EAAEZ,KAAK,CAACa,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAde;AAkBvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfC,IAAAA,SAAS,EAAElB,KAAK,CAACS,OAAN,CAAc,CAAd;AAFP,GAlBiB;AAsBvBU,EAAAA,MAAM,EAAE;AACNR,IAAAA,MAAM,EAAEX,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAtBe,CAAL,CAApB;;AA2BA,MAAMW,eAAe,GAAGC,MAAM,CAAC,wHAAD,CAA9B;;AAEA,MAAMC,IAAN,SAAmBrC,SAAnB,CAA6B;AAC3BsC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAenBC,OAfmB,GAeT,OAAOC,IAAP,EAAaC,OAAb,KAAyB;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAMI,GAAG,GAAG,KAAKC,KAAL,CAAWC,KAAX,GAAmBN,IAAI,CAACM,KAAxB,GAAgCN,IAAI,CAACO,MAAjD;AACAN,MAAAA,OAAO,CAACO,OAAR,CAAgBJ,GAAhB;AACA,WAAKN,KAAL,CAAWW,OAAX,CAAmBC,IAAnB,CAAyB,GAAzB;AACD,KArBkB;;AAAA,SAuBnBC,YAvBmB,GAuBHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,OAAd;;AACA,UAAG,KAAKX,KAAL,CAAWY,MAAX,CAAkBL,CAAC,CAACE,MAAF,CAASC,IAA3B,EAAiCG,MAAjC,KAA4C,CAA/C,EAAiD;AAC/C,aAAKC,SAAL,CAAeP,CAAf;AACD;AACF,KA5BkB;;AAAA,SA8BnBnB,MA9BmB,GA8BT2B,QAAD,IAAc;AACrBlB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAG,KAAKE,KAAL,CAAWY,MAAX,CAAkBI,KAAlB,CAAwBH,MAAxB,KAAmC,CAAnC,IAAwC,KAAKb,KAAL,CAAWY,MAAX,CAAkBF,IAAlB,CAAuBG,MAAvB,KAAkC,CAA1E,IAA+E,KAAKb,KAAL,CAAWY,MAAX,CAAkBK,QAAlB,CAA2BJ,MAA3B,KAAsC,CAAxH,EAA0H;AACxHhB,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAiB,QAAAA,QAAQ;AACT;AACF,KApCkB;;AAAA,SAsCnBD,SAtCmB,GAsCNP,CAAD,IAAO;AACjB,YAAM;AAAEG,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBJ,CAAC,CAACE,MAA1B;AACA,UAAIG,MAAM,GAAG,KAAKZ,KAAL,CAAWY,MAAxB;;AAEA,cAAQF,IAAR;AACE,aAAK,MAAL;AACEE,UAAAA,MAAM,CAACF,IAAP,GACEC,KAAK,CAACE,MAAN,GAAe,CAAf,GACI,iCADJ,GAEI,EAHN;AAIA;;AACF,aAAK,OAAL;AACED,UAAAA,MAAM,CAACI,KAAP,GACE3B,eAAe,CAAC6B,IAAhB,CAAqBP,KAArB,IACI,EADJ,GAEI,qBAHN;AAIA;;AACF,aAAK,UAAL;AACEC,UAAAA,MAAM,CAACK,QAAP,GACEN,KAAK,CAACE,MAAN,GAAe,CAAf,GACI,qCADJ,GAEI,EAHN;AAIA;;AACF;AACE;AApBJ;;AAsBA,WAAKL,QAAL,CAAc;AAACI,QAAAA;AAAD,OAAd;AACD,KAjEkB;;AAEjB,SAAKZ,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXe,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXP,MAAAA,IAAI,EAAE,EAJK;AAKXE,MAAAA,MAAM,EAAE;AACNI,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,QAAQ,EAAE,EAFJ;AAGNP,QAAAA,IAAI,EAAE;AAHA;AALG,KAAb;AAWD;;AAsDDS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChBvB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACpB,MAAAA,KAAD;AAAQS,MAAAA,IAAR;AAAcM,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,QAAiC,KAAKjB,KAA5C;AACA,UAAM;AAAEsB,MAAAA;AAAF,QAAc,KAAK7B,KAAzB;AACA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIG,OAAD,IAAa;AACZ,aACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAA4B,QAAA,SAAS,EAAE0B,OAAO,CAACpD,IAA/C;AAAqD,QAAA,QAAQ,EAAC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEoD,OAAO,CAAC9C,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAE8C,OAAO,CAAChD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEgD,OAAO,CAAC3C,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGsB,KAAK,GAAG,SAAH,GAAe,SADvB,CAFF,EAKE;AAAM,QAAA,SAAS,EAAEqB,OAAO,CAACrC,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACgB,KAAD,IACC,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAEM,CAAC,IAAI;AACb,eAAKD,YAAL,CAAkBC,CAAlB;AACD,SAHH;AAIE,QAAA,MAAM,EAAE,KAAKO,SAJf;AAKE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWY,MAAX,CAAkBF,IAAlB,CAAuBG,MAAvB,KAAkC,CAL3C;AAME,QAAA,UAAU,EAAE,KAAKb,KAAL,CAAWY,MAAX,CAAkBF,IANhC;AAOE,QAAA,YAAY,EAAC,MAPf;AAQE,QAAA,IAAI,EAAC,MARP;AASE,QAAA,OAAO,EAAC,UATV;AAUE,QAAA,QAAQ,MAVV;AAWE,QAAA,SAAS,MAXX;AAYE,QAAA,EAAE,EAAC,MAZL;AAaE,QAAA,KAAK,EAAC,MAbR;AAcE,QAAA,SAAS,MAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,EAqBE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAEH,CAAC,IAAI;AACb,eAAKD,YAAL,CAAkBC,CAAlB;AACD,SAHH;AAIE,QAAA,MAAM,EAAE,KAAKO,SAJf;AAKE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWY,MAAX,CAAkBI,KAAlB,CAAwBH,MAAxB,KAAmC,CAL5C;AAME,QAAA,UAAU,EAAE,KAAKb,KAAL,CAAWY,MAAX,CAAkBI,KANhC;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,QAAQ,MARV;AASE,QAAA,SAAS,MATX;AAUE,QAAA,EAAE,EAAC,OAVL;AAWE,QAAA,KAAK,EAAC,eAXR;AAYE,QAAA,IAAI,EAAC,OAZP;AAaE,QAAA,YAAY,EAAC,OAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CArBF,EAsCE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAET,CAAC,IAAI;AACb,eAAKD,YAAL,CAAkBC,CAAlB;AACD,SAHH;AAIE,QAAA,MAAM,EAAE,KAAKO,SAJf;AAKE,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWY,MAAX,CAAkBK,QAAlB,CAA2BJ,MAA3B,KAAsC,CAL/C;AAME,QAAA,UAAU,EAAE,KAAKb,KAAL,CAAWY,MAAX,CAAkBK,QANhC;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,QAAQ,MARV;AASE,QAAA,SAAS,MATX;AAUE,QAAA,IAAI,EAAC,UAVP;AAWE,QAAA,KAAK,EAAC,UAXR;AAYE,QAAA,IAAI,EAAC,UAZP;AAaE,QAAA,EAAE,EAAC,UAbL;AAcE,QAAA,YAAY,EAAC,kBAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtCF,CADF,EA2DE,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAEhB,KAAK,GAAG3C,cAAH,GAAoBD,eADrC;AAEE,QAAA,SAAS,EAAE;AAAE2D,UAAAA,KAAF;AAASC,UAAAA,QAAT;AAAmBP,UAAAA;AAAnB,SAFb;AAGE,QAAA,WAAW,EAAGf,IAAD,IAAS;AAAC,eAAKD,OAAL,CAAaC,IAAb,EAAmBC,OAAnB;AAA4B,SAHrD;AAIE,QAAA,OAAO,EAAGD,IAAD,IAAU;AAAC,eAAKwB,WAAL,CAAiBxB,IAAI,CAAC4B,aAAL,CAAmB,CAAnB,CAAjB;AAAwC,SAJ9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMC,CAACR,QAAD,EAAW;AAAES,QAAAA,OAAF;AAAWJ,QAAAA,KAAX;AAAkBzB,QAAAA,IAAlB;AAAwB8B,QAAAA;AAAxB,OAAX,KACD,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,SAAS,EAAEH,OAAO,CAAClC,MALrB;AAME,QAAA,OAAO,EAAGmB,CAAD,IAAO;AACdA,UAAAA,CAAC,CAACmB,cAAF;AACA,eAAKtC,MAAL,CAAY2B,QAAZ,EAFc,CAGd;AACD,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYGd,KAAK,GAAG,SAAH,GAAe,SAZvB,CAPA,CA3DF,EAkFGA,KAAK,GACJ,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,OAAO,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EAME,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,MAAM;AAEb,eAAKO,QAAL,CAAc;AAAEP,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SALH;AAME,QAAA,OAAO,EAAC,OANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,gCARH,CADF,CANF,CADI,GAqBJ,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKO,QAAL,CAAc;AAAEP,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD,SAJH;AAKE,QAAA,OAAO,EAAC,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,CAvGJ,CALF,CADF,CADA,CADF;AAkIH,KApID,CADF;AAwIH;;AAnN4B;;AAsN7B,eAAe1C,UAAU,CAACS,MAAD,CAAV,CAAmBuB,IAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { UserConsumer } from './App'\n//GQL\nimport {SIGNUP_MUTATION, LOGIN_MUTATION} from '../resolvers/Mutations'\n//STYLING\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Avatar,\n  Card,\n  Button,\n  TextField,\n  Link,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      login: true,\n      email: \"\",\n      password: \"\",\n      name: \"\",\n      errors: {\n        email: '',\n        password: '',\n        name: ''\n      }\n    };\n  }\n\n  confirm = async (data, context) => {\n    console.log('CONFIRM')\n    console.log(data)\n    const res = this.state.login ? data.login : data.signup;\n    context.setUser(res)\n    this.props.history.push(`/`);\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n    if(this.state.errors[e.target.name].length !== 0){\n      this.validator(e)\n    }\n  }\n\n  submit = (mutation) => {\n    console.log('SUBMIT')\n    if(this.state.errors.email.length === 0 && this.state.errors.name.length === 0 && this.state.errors.password.length === 0){\n      console.log('MUTATE')\n      mutation()\n    }\n  }\n\n  validator = (e) => {\n    const { name, value } = e.target;\n    let errors = this.state.errors;\n  \n    switch (name) {\n      case 'name': \n        errors.name = \n          value.length < 5\n            ? 'Name must be 5 characters long!'\n            : '';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 8\n            ? 'Password must be 8 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n    this.setState({errors})\n  }\n\n  handleError(error){\n    console.log(error)\n  }\n\n  render(){\n    const {login, name, email, password} = this.state\n    const { classes } = this.props;\n    return (\n      <UserConsumer>\n        {(context) => {\n          return (      \n            <Container component=\"main\" className={classes.root} maxWidth=\"xs\">\n            <Card className={classes.card}>\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}></Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  {login ? \"Sign in\" : \"Sign Up\"}\n                </Typography>\n                <form className={classes.form} noValidate>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                      {!login && (\n                        <TextField\n                          onChange={e => {\n                            this.handleChange(e);\n                          }}\n                          onBlur={this.validator}\n                          error={this.state.errors.name.length !== 0}\n                          helperText={this.state.errors.name}\n                          autoComplete=\"name\"\n                          name=\"name\"\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"Name\"\n                          label=\"Name\"\n                          autoFocus\n                        />\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        onBlur={this.validator}\n                        error={this.state.errors.email.length !== 0}\n                        helperText={this.state.errors.email}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        onBlur={this.validator}\n                        error={this.state.errors.password.length !== 0}\n                        helperText={this.state.errors.password}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </Grid>\n                  </Grid>\n                  \n                  <Mutation\n                    mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n                    variables={{ email, password, name }}\n                    onCompleted={(data)=> {this.confirm(data, context)}}\n                    onError={(data) => {this.handleError(data.graphQLErrors[0])}}\n                >\n                  {(mutation, { loading, error, data, called }) => (\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={(e) => {\n                      e.preventDefault()\n                      this.submit(mutation)\n                      // mutation()\n                    }}\n                  >\n                    {login ? \"Sign in\" : \"Sign Up\"}\n                  </Button>\n                  )}\n                  </Mutation>\n                  {login ? (\n                    <Grid container>\n                      <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                          Forgot password?\n                        </Link>\n                      </Grid>\n                      <Grid item>\n                        <Link\n                          href=\"#\"\n                          onClick={() => {\n              \n                            this.setState({ login: false });\n                          }}\n                          variant=\"body2\"\n                        >\n                          {\"Don't have an account? Sign Up\"}\n                        </Link>\n                      </Grid>\n                    </Grid>\n                  ) : (\n                    <Grid container justify=\"flex-end\">\n                      <Grid item>\n                        <Link\n                          href=\"#\"\n                          onClick={() => {\n                            this.setState({ login: true });\n                          }}\n                          variant=\"body2\"\n                        >\n                          Already have an account? Sign in\n                        </Link>\n                      </Grid>\n                    </Grid>\n                  )}\n                </form>\n              </div>\n            </Card>\n          </Container>\n        )\n      }}\n      </UserConsumer> \n  );\n}\n}\n\nexport default withStyles(styles)(Auth);\n"]},"metadata":{},"sourceType":"module"}