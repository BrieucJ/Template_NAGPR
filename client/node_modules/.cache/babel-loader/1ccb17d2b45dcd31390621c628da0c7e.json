{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Auth.js\";\nimport React, { Component, Fragment } from 'react';\nimport { AUTH_TOKEN } from '../utils/constants';\nimport { Mutation, useMutation } from 'react-apollo';\nimport gql from 'graphql-tag'; //STYLING\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Avatar, Card, Button, TextField, FormControlLabel, Checkbox, Link, Grid, Typography } from '@material-ui/core';\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  card: {\n    padding: theme.spacing(10)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      // switch between Login and SignUp\n      email: '',\n      password: '',\n      name: ''\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n\n    this._confirm = async data => {\n      const {\n        token\n      } = this.state.login ? data.login : data.signup;\n\n      this._saveUserData(token);\n\n      this.props.history.push(`/`);\n    };\n\n    this._confirm = async () => {// ... you'll implement this ðŸ”œ\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state);\n  }\n\n  async submit(e) {\n    e.preventDefault();\n  } // signIn(classes){\n  //   return(\n  //   <Mutation\n  //     mutation={LOGIN_MUTATION}\n  //     variables={{ email, password, name }}\n  //     onCompleted={data => this._confirm(data)}\n  //   >\n  //     {mutation => (\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign in\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         id=\"email\"\n  //         label=\"Email Address\"\n  //         name=\"email\"\n  //         autoComplete=\"email\"\n  //         autoFocus\n  //       />\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         name=\"password\"\n  //         label=\"Password\"\n  //         type=\"password\"\n  //         id=\"password\"\n  //         autoComplete=\"current-password\"\n  //       />\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign In\n  //       </Button>\n  //       <Grid container>\n  //         <Grid item xs>\n  //           <Link href=\"#\" variant=\"body2\">\n  //             Forgot password?\n  //           </Link>\n  //         </Grid>\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n  //             {\"Don't have an account? Sign Up\"}\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )}\n  //   </Mutation>\n  //   )\n  // }\n  // signUp = (classes) => {\n  //   return(\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign up\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <Grid container spacing={2}>\n  //         <Grid item xs={12} >\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             autoComplete=\"name\"\n  //             name=\"Name\"\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"Name\"\n  //             label=\"Name\"\n  //             autoFocus\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"email\"\n  //             label=\"Email Address\"\n  //             name=\"email\"\n  //             autoComplete=\"email\"\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             name=\"password\"\n  //             label=\"Password\"\n  //             type=\"password\"\n  //             id=\"password\"\n  //             autoComplete=\"current-password\"\n  //           />\n  //         </Grid>\n  //       </Grid>\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign Up\n  //       </Button>\n  //       <Grid container justify=\"flex-end\">\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n  //             Already have an account? Sign in\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )\n  // }\n\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Container, {\n      component: \"main\",\n      className: classes.root,\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: login ? LOGIN_MUTATION : SIGNUP_MUTATION,\n      variables: {\n        email,\n        password,\n        name\n      },\n      onCompleted: data => this._confirm(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, mutation => React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      autoComplete: \"name\",\n      name: \"Name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"Name\",\n      label: \"Name\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      onClick: e => {\n        this.submit(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      onClick: () => {\n        this.setState({\n          login: true\n        });\n      },\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Already have an account? Sign in\"))))))));\n  }\n\n}\n\nexport default withStyles(styles)(Auth);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Auth.js"],"names":["React","Component","Fragment","AUTH_TOKEN","Mutation","useMutation","gql","withStyles","Container","Avatar","Card","Button","TextField","FormControlLabel","Checkbox","Link","Grid","Typography","SIGNUP_MUTATION","LOGIN_MUTATION","styles","theme","root","display","justifyContent","alignItems","paper","flexDirection","card","padding","spacing","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Auth","state","login","email","password","name","_saveUserData","token","localStorage","setItem","_confirm","data","signup","props","history","push","handleChange","e","setState","target","value","console","log","preventDefault","render","classes","mutation"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { AUTH_TOKEN } from '../utils/constants'\nimport { Mutation, useMutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n//STYLING\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Avatar, Card, Button, TextField, FormControlLabel, Checkbox, Link, Grid, Typography } from '@material-ui/core';\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nconst styles = theme => ({\n  root:{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  card:{\n    padding: theme.spacing(10)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\n\nclass Auth extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n\n  _confirm = async data => {\n    const { token } = this.state.login ? data.login : data.signup\n    this._saveUserData(token)\n    this.props.history.push(`/`)\n  }\n\n  handleChange(e){\n    this.setState({[e.target.name]: e.target.value})\n    console.log(this.state)\n  }\n\n  async submit(e){\n    e.preventDefault();\n\n  }\n\n  // signIn(classes){\n  //   return(\n  //   <Mutation\n  //     mutation={LOGIN_MUTATION}\n  //     variables={{ email, password, name }}\n  //     onCompleted={data => this._confirm(data)}\n  //   >\n  //     {mutation => (\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n        \n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign in\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         id=\"email\"\n  //         label=\"Email Address\"\n  //         name=\"email\"\n  //         autoComplete=\"email\"\n  //         autoFocus\n  //       />\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         name=\"password\"\n  //         label=\"Password\"\n  //         type=\"password\"\n  //         id=\"password\"\n  //         autoComplete=\"current-password\"\n  //       />\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign In\n  //       </Button>\n  //       <Grid container>\n  //         <Grid item xs>\n  //           <Link href=\"#\" variant=\"body2\">\n  //             Forgot password?\n  //           </Link>\n  //         </Grid>\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n  //             {\"Don't have an account? Sign Up\"}\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )}\n  //   </Mutation>\n  //   )\n  // }\n\n  // signUp = (classes) => {\n  //   return(\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign up\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <Grid container spacing={2}>\n  //         <Grid item xs={12} >\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             autoComplete=\"name\"\n  //             name=\"Name\"\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"Name\"\n  //             label=\"Name\"\n  //             autoFocus\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"email\"\n  //             label=\"Email Address\"\n  //             name=\"email\"\n  //             autoComplete=\"email\"\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             name=\"password\"\n  //             label=\"Password\"\n  //             type=\"password\"\n  //             id=\"password\"\n  //             autoComplete=\"current-password\"\n  //           />\n  //         </Grid>\n  //       </Grid>\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign Up\n  //       </Button>\n  //       <Grid container justify=\"flex-end\">\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n  //             Already have an account? Sign in\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )\n  // }\n\n  render() {\n    const { login, email, password, name } = this.state\n    const { classes } = this.props;\n    return (\n    <Container component=\"main\" className={classes.root} maxWidth=\"xs\">\n      <Card className={classes.card}>\n        <Mutation\n          mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n          variables={{ email, password, name }}\n          onCompleted={data => this._confirm(data)}\n        >\n          {mutation => (\n                  <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n            \n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} >\n                        <TextField\n                          onChange={(e)=>{this.handleChange(e)}}\n                          autoComplete=\"name\"\n                          name=\"Name\"\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"Name\"\n                          label=\"Name\"\n                          autoFocus\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          onChange={(e)=>{this.handleChange(e)}}\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          id=\"email\"\n                          label=\"Email Address\"\n                          name=\"email\"\n                          autoComplete=\"email\"\n                        />\n                      </Grid>\n                      <Grid item xs={12}>\n                        <TextField\n                          onChange={(e)=>{this.handleChange(e)}}\n                          variant=\"outlined\"\n                          required\n                          fullWidth\n                          name=\"password\"\n                          label=\"Password\"\n                          type=\"password\"\n                          id=\"password\"\n                          autoComplete=\"current-password\"\n                        />\n                      </Grid>\n                    </Grid>\n                    <Button\n                      type=\"submit\"\n                      fullWidth\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.submit}\n                      onClick={(e)=> {this.submit(e)}}\n                    >\n                      Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                      <Grid item>\n                        <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n                          Already have an account? Sign in\n                        </Link>\n                      </Grid>\n                    </Grid>\n                  </form>\n                </div>\n          )}\n        </Mutation>\n      </Card>\n    </Container>\n    )\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this ðŸ”œ\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n\nexport default withStyles(styles)(Auth)"]},"metadata":{},"sourceType":"module"}