{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker'; //APOLLO\n\nimport { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context'; //ROUTER\n\nimport { BrowserRouter } from 'react-router-dom';\nconst httpLink = createHttpLink({\n  uri: `http://localhost:${process.env.PORT || 4000}`\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render(React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","setContext","BrowserRouter","httpLink","uri","process","env","PORT","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,qBAA3B,C,CACA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAACK,EAAAA,GAAG,EAAG,oBAAmBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAK;AAAnD,CAAD,CAA/B;AACA,MAAMC,QAAQ,GAAGP,UAAU,CAAC,CAACQ,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC5C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,GAAP;AAMH,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAACkB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBd,QAAhB,CAAP;AAAkCe,EAAAA,KAAK,EAAE,IAAIlB,aAAJ;AAAzC,CAAjB,CAAf;AAEAN,QAAQ,CAACyB,MAAT,CACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,CADA,EAOEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF,E,CAUA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n//APOLLO\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { setContext } from 'apollo-link-context'\n//ROUTER\nimport { BrowserRouter } from 'react-router-dom'\n\nconst httpLink = createHttpLink({uri: `http://localhost:${process.env.PORT || 4000}`})\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('token')\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    }\n})\n\nconst client = new ApolloClient({link: authLink.concat(httpLink), cache: new InMemoryCache() })\n\nReactDOM.render(\n<BrowserRouter >\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n</BrowserRouter>\n, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}