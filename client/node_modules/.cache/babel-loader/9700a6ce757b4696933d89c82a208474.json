{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Auth.js\";\nimport React, { Component, Fragment } from 'react';\nimport { AUTH_TOKEN } from '../utils/constants';\nimport { Mutation, useMutation } from 'react-apollo';\nimport gql from 'graphql-tag'; //STYLING\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Avatar, Card, Button, TextField, FormControlLabel, Checkbox, Link, Grid, Typography } from '@material-ui/core';\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  card: {\n    padding: 10\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      // switch between Login and SignUp\n      email: '',\n      password: '',\n      name: ''\n    };\n\n    this._confirm = async data => {\n      const {\n        token\n      } = this.state.login ? data.login : data.signup;\n\n      this._saveUserData(token);\n\n      this.props.history.push(`/`);\n    };\n\n    this.signIn = (classes, mutation) => {\n      return React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: mutation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Forgot password?\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            login: false\n          });\n        },\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Don't have an account? Sign Up\")))));\n    };\n\n    this.signUp = (classes, mutation) => {\n      return React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        autoComplete: \"name\",\n        name: \"Name\",\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"Name\",\n        label: \"Name\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: () => {\n          mutation;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            login: true\n          });\n        },\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Already have an account? Sign in\")))));\n    };\n\n    this._confirm = async () => {// ... you'll implement this ðŸ”œ\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state);\n  }\n\n  async submit(e) {\n    e.preventDefault();\n    console.log('SUBMIT');\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Container, {\n      component: \"main\",\n      className: classes.root,\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: login ? LOGIN_MUTATION : SIGNUP_MUTATION,\n      variables: {\n        email,\n        password,\n        name\n      },\n      onCompleted: data => this._confirm(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, mutation => React.createElement(\"frament\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, login ? this.signIn(classes, mutation) : this.signUp(classes, mutation)))));\n  }\n\n}\n\nexport default withStyles(styles)(Auth);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Auth.js"],"names":["React","Component","Fragment","AUTH_TOKEN","Mutation","useMutation","gql","withStyles","Container","Avatar","Card","Button","TextField","FormControlLabel","Checkbox","Link","Grid","Typography","SIGNUP_MUTATION","LOGIN_MUTATION","styles","theme","root","display","justifyContent","alignItems","paper","flexDirection","card","padding","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Auth","state","login","email","password","name","_confirm","data","token","signup","_saveUserData","props","history","push","signIn","classes","mutation","e","handleChange","setState","signUp","localStorage","setItem","target","value","console","log","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { AUTH_TOKEN } from '../utils/constants'\nimport { Mutation, useMutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n//STYLING\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Avatar, Card, Button, TextField, FormControlLabel, Checkbox, Link, Grid, Typography } from '@material-ui/core';\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nconst styles = theme => ({\n  root:{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  card:{\n    padding: 10\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass Auth extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  _confirm = async data => {\n    const { token } = this.state.login ? data.login : data.signup\n    this._saveUserData(token)\n    this.props.history.push(`/`)\n  }\n\n  handleChange(e){\n    this.setState({[e.target.name]: e.target.value})\n    console.log(this.state)\n  }\n\n  async submit(e){\n    e.preventDefault();\n    console.log('SUBMIT')\n  }\n\n\n  signIn = (classes, mutation) => {\n    return(\n      <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        \n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          onChange={(e)=>{this.handleChange(e)}}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          onChange={(e)=>{this.handleChange(e)}}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={mutation}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n    )\n  }\n\n  signUp = (classes, mutation) => {\n    return(\n      <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign up\n      </Typography>\n      <form className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12} >\n            <TextField\n              onChange={(e)=>{this.handleChange(e)}}\n              autoComplete=\"name\"\n              name=\"Name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"Name\"\n              label=\"Name\"\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e)=>{this.handleChange(e)}}\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e)=>{this.handleChange(e)}}\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={()=> {mutation}}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n    )\n  }\n\n  render() {\n    const { login, email, password, name } = this.state\n    const { classes } = this.props;\n    return (\n    <Container component=\"main\" className={classes.root} maxWidth=\"xs\">\n      <Card className={classes.card}>\n        <Mutation\n          mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n          variables={{ email, password, name }}\n          onCompleted={data => this._confirm(data)}\n        >\n          {mutation => (\n            <frament>\n            {login ? this.signIn(classes, mutation) : this.signUp(classes, mutation)}\n            </frament>\n          )}\n        </Mutation>\n        </Card>\n    </Container>\n    )\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this ðŸ”œ\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n\nexport default withStyles(styles)(Auth)"]},"metadata":{},"sourceType":"module"}