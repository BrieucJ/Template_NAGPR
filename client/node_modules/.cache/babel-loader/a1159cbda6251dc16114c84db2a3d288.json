{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Layout.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Footer from './Footer';\nimport Header from './Header'; //STYLING\n\nimport { Container, ThemeProvider, Button } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles'; // const theme = createMuiTheme({\n//   palette: {\n//     type: 'dark',\n//     background: {\n//       default: theme.paletteType === 'light' ? 'red' : 'yellow',\n//     },\n//     primary: {\n//       // light: will be calculated from palette.primary.main,\n//       main: '#ff4400',\n//       // dark: will be calculated from palette.primary.main,\n//       // contrastText: will be calculated to contrast with palette.primary.main\n//     },\n//     secondary: {\n//       light: '#0066ff',\n//       main: '#0044ff',\n//       // dark: will be calculated from palette.secondary.main,\n//       contrastText: '#ffcc00',\n//     },\n//     // Used by `getContrastText()` to maximize the contrast between\n//     // the background and the text.\n//     contrastThreshold: 3,\n//     // Used by the functions below to shift a color's luminance by approximately\n//     // two indexes within its tonal palette.\n//     // E.g., shift from Red 500 to Red 300 or Red 700.\n//     tonalOffset: 0.2,\n//   },\n// });\n\nfunction getTheme(theme) {\n  return createMuiTheme({\n    palette: {\n      type: theme.paletteType,\n      background: {\n        default: theme.paletteType === 'light' ? 'red' : 'yellow'\n      },\n      primary: {\n        // light: will be calculated from palette.primary.main,\n        main: '#ff4400' // dark: will be calculated from palette.primary.main,\n        // contrastText: will be calculated to contrast with palette.primary.main\n\n      },\n      secondary: {\n        light: '#0066ff',\n        main: '#0044ff',\n        // dark: will be calculated from palette.secondary.main,\n        contrastText: '#ffcc00'\n      },\n      // Used by `getContrastText()` to maximize the contrast between\n      // the background and the text.\n      contrastThreshold: 3,\n      // Used by the functions below to shift a color's luminance by approximately\n      // two indexes within its tonal palette.\n      // E.g., shift from Red 500 to Red 300 or Red 700.\n      tonalOffset: 0.2\n    }\n  });\n}\n\nconst theme = getTheme({\n  paletteType: 'light'\n});\n\nclass Layout extends Component {\n  render() {\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Container, {\n      disableGutters: true,\n      maxWidth: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Primary\"), React.createElement(Button, {\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Secondary\"), this.props.children, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(Layout);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Layout.js"],"names":["React","Component","withRouter","Footer","Header","Container","ThemeProvider","Button","createMuiTheme","getTheme","theme","palette","type","paletteType","background","default","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","Layout","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,MAAnC,QAAiD,mBAAjD;AACA,SAASC,cAAT,QAA+B,0BAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAOF,cAAc,CAAC;AACpBG,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEF,KAAK,CAACG,WADL;AAEPC,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAEL,KAAK,CAACG,WAAN,KAAsB,OAAtB,GAAgC,KAAhC,GAAwC;AADvC,OAFL;AAKPG,MAAAA,OAAO,EAAE;AACP;AACAC,QAAAA,IAAI,EAAE,SAFC,CAGP;AACA;;AAJO,OALF;AAWPC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,SADE;AAETF,QAAAA,IAAI,EAAE,SAFG;AAGT;AACAG,QAAAA,YAAY,EAAE;AAJL,OAXJ;AAiBP;AACA;AACAC,MAAAA,iBAAiB,EAAE,CAnBZ;AAoBP;AACA;AACA;AACAC,MAAAA,WAAW,EAAE;AAvBN;AADW,GAAD,CAArB;AA2BD;;AAED,MAAMZ,KAAK,GAAGD,QAAQ,CAAC;AACrBI,EAAAA,WAAW,EAAE;AADQ,CAAD,CAAtB;;AAIA,MAAMU,MAAN,SAAqBtB,SAArB,CAA+B;AAC7BuB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEd,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAW,MAAA,cAAc,MAAzB;AAA0B,MAAA,QAAQ,EAAE,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,EAIK,KAAKe,KAAL,CAAWC,QAJhB,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADA,CADF;AAWD;;AAb4B;;AAgB/B,eAAexB,UAAU,CAACqB,MAAD,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\nimport Footer from './Footer'\nimport Header from './Header'\n//STYLING\nimport { Container, ThemeProvider, Button } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// const theme = createMuiTheme({\n//   palette: {\n//     type: 'dark',\n//     background: {\n//       default: theme.paletteType === 'light' ? 'red' : 'yellow',\n//     },\n//     primary: {\n//       // light: will be calculated from palette.primary.main,\n//       main: '#ff4400',\n//       // dark: will be calculated from palette.primary.main,\n//       // contrastText: will be calculated to contrast with palette.primary.main\n//     },\n//     secondary: {\n//       light: '#0066ff',\n//       main: '#0044ff',\n//       // dark: will be calculated from palette.secondary.main,\n//       contrastText: '#ffcc00',\n//     },\n//     // Used by `getContrastText()` to maximize the contrast between\n//     // the background and the text.\n//     contrastThreshold: 3,\n//     // Used by the functions below to shift a color's luminance by approximately\n//     // two indexes within its tonal palette.\n//     // E.g., shift from Red 500 to Red 300 or Red 700.\n//     tonalOffset: 0.2,\n//   },\n// });\n\n\nfunction getTheme(theme) {\n  return createMuiTheme({\n    palette: {\n      type: theme.paletteType,\n      background: {\n        default: theme.paletteType === 'light' ? 'red' : 'yellow',\n      },\n      primary: {\n        // light: will be calculated from palette.primary.main,\n        main: '#ff4400',\n        // dark: will be calculated from palette.primary.main,\n        // contrastText: will be calculated to contrast with palette.primary.main\n      },\n      secondary: {\n        light: '#0066ff',\n        main: '#0044ff',\n        // dark: will be calculated from palette.secondary.main,\n        contrastText: '#ffcc00',\n      },\n      // Used by `getContrastText()` to maximize the contrast between\n      // the background and the text.\n      contrastThreshold: 3,\n      // Used by the functions below to shift a color's luminance by approximately\n      // two indexes within its tonal palette.\n      // E.g., shift from Red 500 to Red 300 or Red 700.\n      tonalOffset: 0.2,\n    },\n  });\n}\n\nconst theme = getTheme({\n  paletteType: 'light',\n});\n\nclass Layout extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n      <Container disableGutters maxWidth={false} >\n        <Header/>\n        <Button color=\"primary\">Primary</Button>\n        <Button color=\"secondary\">Secondary</Button>\n          {this.props.children}\n        <Footer/>\n      </Container>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default withRouter(Layout)"]},"metadata":{},"sourceType":"module"}