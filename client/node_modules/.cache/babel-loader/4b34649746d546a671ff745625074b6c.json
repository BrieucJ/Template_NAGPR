{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Auth.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { AUTH_TOKEN } from \"../utils/constants\";\nimport { Mutation, useMutation } from \"react-apollo\";\nimport gql from \"graphql-tag\"; //STYLING\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Container, Avatar, Card, Button, TextField, Link, Grid, Typography } from \"@material-ui/core\";\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      // switch between Login and SignUp\n      email: \"\",\n      password: \"\",\n      name: \"\"\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n\n    this._confirm = async data => {\n      const {\n        token\n      } = this.state.login ? data.login : data.signup;\n\n      this._saveUserData(token);\n\n      this.props.history.push(`/`);\n    };\n\n    this._confirm = async () => {// ... you'll implement this ðŸ”œ\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state);\n  }\n\n  async submit(e) {\n    e.preventDefault();\n  } // signIn(classes){\n  //   return(\n  //   <Mutation\n  //     mutation={LOGIN_MUTATION}\n  //     variables={{ email, password, name }}\n  //     onCompleted={data => this._confirm(data)}\n  //   >\n  //     {mutation => (\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign in\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         id=\"email\"\n  //         label=\"Email Address\"\n  //         name=\"email\"\n  //         autoComplete=\"email\"\n  //         autoFocus\n  //       />\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         name=\"password\"\n  //         label=\"Password\"\n  //         type=\"password\"\n  //         id=\"password\"\n  //         autoComplete=\"current-password\"\n  //       />\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign In\n  //       </Button>\n  //       <Grid container>\n  //         <Grid item xs>\n  //           <Link href=\"#\" variant=\"body2\">\n  //             Forgot password?\n  //           </Link>\n  //         </Grid>\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n  //             {\"Don't have an account? Sign Up\"}\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )}\n  //   </Mutation>\n  //   )\n  // }\n  // signUp = (classes) => {\n  //   return(\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign up\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <Grid container spacing={2}>\n  //         <Grid item xs={12} >\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             autoComplete=\"name\"\n  //             name=\"Name\"\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"Name\"\n  //             label=\"Name\"\n  //             autoFocus\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"email\"\n  //             label=\"Email Address\"\n  //             name=\"email\"\n  //             autoComplete=\"email\"\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             name=\"password\"\n  //             label=\"Password\"\n  //             type=\"password\"\n  //             id=\"password\"\n  //             autoComplete=\"current-password\"\n  //           />\n  //         </Grid>\n  //       </Grid>\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign Up\n  //       </Button>\n  //       <Grid container justify=\"flex-end\">\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n  //             Already have an account? Sign in\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )\n  // }\n\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Container, {\n      component: \"main\",\n      className: classes.root,\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, login ? 'Sign in' : 'Sign Up'), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, !login && React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      autoComplete: \"name\",\n      name: \"Name\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"Name\",\n      label: \"Name\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: e => {\n        this.handleChange(e);\n      },\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      onClick: e => {\n        e.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, login ? 'Sign in' : 'Sign Up'), login ? React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Forgot password?\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      onClick: () => {\n        this.setState({\n          login: false\n        });\n      },\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\"))) : React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      onClick: () => {\n        this.setState({\n          login: true\n        });\n      },\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Already have an account? Sign in\")))))));\n  }\n\n}\n\nexport default withStyles(styles)(Auth);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Auth.js"],"names":["React","Component","Fragment","AUTH_TOKEN","Mutation","useMutation","gql","withStyles","Container","Avatar","Card","Button","TextField","Link","Grid","Typography","SIGNUP_MUTATION","LOGIN_MUTATION","styles","theme","root","display","justifyContent","alignItems","paper","flexDirection","card","padding","spacing","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Auth","state","login","email","password","name","_saveUserData","token","localStorage","setItem","_confirm","data","signup","props","history","push","handleChange","e","setState","target","value","console","log","preventDefault","render","classes"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { AUTH_TOKEN } from \"../utils/constants\";\nimport { Mutation, useMutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n//STYLING\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Avatar,\n  Card,\n  Button,\n  TextField,\n  Link,\n  Grid,\n  Typography\n} from \"@material-ui/core\";\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  card: {\n    padding: theme.spacing(2)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  };\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token);\n  };\n\n  _confirm = async data => {\n    const { token } = this.state.login ? data.login : data.signup;\n    this._saveUserData(token);\n    this.props.history.push(`/`);\n  };\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(this.state);\n  }\n\n  async submit(e) {\n    e.preventDefault();\n  }\n\n  // signIn(classes){\n  //   return(\n  //   <Mutation\n  //     mutation={LOGIN_MUTATION}\n  //     variables={{ email, password, name }}\n  //     onCompleted={data => this._confirm(data)}\n  //   >\n  //     {mutation => (\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign in\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         id=\"email\"\n  //         label=\"Email Address\"\n  //         name=\"email\"\n  //         autoComplete=\"email\"\n  //         autoFocus\n  //       />\n  //       <TextField\n  //         onChange={(e)=>{this.handleChange(e)}}\n  //         variant=\"outlined\"\n  //         margin=\"normal\"\n  //         required\n  //         fullWidth\n  //         name=\"password\"\n  //         label=\"Password\"\n  //         type=\"password\"\n  //         id=\"password\"\n  //         autoComplete=\"current-password\"\n  //       />\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign In\n  //       </Button>\n  //       <Grid container>\n  //         <Grid item xs>\n  //           <Link href=\"#\" variant=\"body2\">\n  //             Forgot password?\n  //           </Link>\n  //         </Grid>\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n  //             {\"Don't have an account? Sign Up\"}\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )}\n  //   </Mutation>\n  //   )\n  // }\n\n  // signUp = (classes) => {\n  //   return(\n  //     <div className={classes.paper}>\n  //     <Avatar className={classes.avatar}>\n\n  //     </Avatar>\n  //     <Typography component=\"h1\" variant=\"h5\">\n  //       Sign up\n  //     </Typography>\n  //     <form className={classes.form} noValidate>\n  //       <Grid container spacing={2}>\n  //         <Grid item xs={12} >\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             autoComplete=\"name\"\n  //             name=\"Name\"\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"Name\"\n  //             label=\"Name\"\n  //             autoFocus\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             id=\"email\"\n  //             label=\"Email Address\"\n  //             name=\"email\"\n  //             autoComplete=\"email\"\n  //           />\n  //         </Grid>\n  //         <Grid item xs={12}>\n  //           <TextField\n  //             onChange={(e)=>{this.handleChange(e)}}\n  //             variant=\"outlined\"\n  //             required\n  //             fullWidth\n  //             name=\"password\"\n  //             label=\"Password\"\n  //             type=\"password\"\n  //             id=\"password\"\n  //             autoComplete=\"current-password\"\n  //           />\n  //         </Grid>\n  //       </Grid>\n  //       <Button\n  //         type=\"submit\"\n  //         fullWidth\n  //         variant=\"contained\"\n  //         color=\"primary\"\n  //         className={classes.submit}\n  //         onClick={(e)=> {this.submit(e)}}\n  //       >\n  //         Sign Up\n  //       </Button>\n  //       <Grid container justify=\"flex-end\">\n  //         <Grid item>\n  //           <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n  //             Already have an account? Sign in\n  //           </Link>\n  //         </Grid>\n  //       </Grid>\n  //     </form>\n  //   </div>\n  //   )\n  // }\n\n  render() {\n    const { login, email, password, name } = this.state;\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" className={classes.root} maxWidth=\"xs\">\n        <Card className={classes.card}>\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}></Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                  {login ? 'Sign in' : 'Sign Up'}\n                </Typography>\n                <form className={classes.form} noValidate>\n                  <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                    {!login &&\n                      <TextField\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        autoComplete=\"name\"\n                        name=\"Name\"\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"Name\"\n                        label=\"Name\"\n                        autoFocus\n                      />\n                      }\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        variant=\"outlined\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                      />\n                    </Grid>\n                  </Grid>\n  \n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e => {\n                      e.preventDefault();\n                      \n                    }}\n                  >\n                    {login ? 'Sign in' : 'Sign Up'}\n                  </Button>\n\n                  {login ? \n                  <Grid container>\n                    <Grid item xs>\n                       <Link href=\"#\" variant=\"body2\">\n                         Forgot password?\n                        </Link>\n                      </Grid>\n                    <Grid item>\n                      <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                      </Link>\n                    </Grid>\n                  </Grid>    \n\n                    :\n                  <Grid container justify=\"flex-end\">\n                    <Grid item>\n                      <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n                        Already have an account? Sign in\n                      </Link>\n                    </Grid>\n                  </Grid>\n                  }\n                </form>\n              </div>\n           \n          \n        </Card>\n      </Container>\n    );\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this ðŸ”œ\n  };\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token);\n  };\n}\n\nexport default withStyles(styles)(Auth);\n"]},"metadata":{},"sourceType":"module"}