{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Auth.js\";\nimport React, { Component, Fragment } from 'react';\nimport { AUTH_TOKEN } from '../utils/constants';\nimport { Mutation, useMutation } from 'react-apollo';\nimport gql from 'graphql-tag'; //STYLING\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Avatar, Card, Button, TextField, FormControlLabel, Checkbox, Link, Grid, Typography } from '@material-ui/core';\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  card: {\n    padding: theme.spacing(10)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n});\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      // switch between Login and SignUp\n      email: '',\n      password: '',\n      name: ''\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n\n    this._confirm = async data => {\n      const {\n        token\n      } = this.state.login ? data.login : data.signup;\n\n      this._saveUserData(token);\n\n      this.props.history.push(`/`);\n    };\n\n    this.signIn = classes => {\n      return React.createElement(Mutation, {\n        mutation: lLOGIN_MUTATION,\n        variables: {\n          email,\n          password,\n          name\n        },\n        onCompleted: data => this._confirm(data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, mutation => React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Sign in\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: e => {\n          this.submit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Forgot password?\")), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            login: false\n          });\n        },\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Don't have an account? Sign Up\"))))));\n    };\n\n    this.signUp = classes => {\n      return React.createElement(\"div\", {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        className: classes.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        autoComplete: \"name\",\n        name: \"Name\",\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"Name\",\n        label: \"Name\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        id: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        autoComplete: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        onChange: e => {\n          this.handleChange(e);\n        },\n        variant: \"outlined\",\n        required: true,\n        fullWidth: true,\n        name: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: e => {\n          this.submit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(Grid, {\n        container: true,\n        justify: \"flex-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"#\",\n        onClick: () => {\n          this.setState({\n            login: true\n          });\n        },\n        variant: \"body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Already have an account? Sign in\")))));\n    };\n\n    this._confirm = async () => {// ... you'll implement this ðŸ”œ\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n    console.log(this.state);\n  }\n\n  async submit(e) {\n    e.preventDefault();\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    const {\n      classes\n    } = this.props;\n    return React.createElement(Container, {\n      component: \"main\",\n      className: classes.root,\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, login ? this.signIn(classes) : this.signUp(classes)));\n  }\n\n}\n\nexport default withStyles(styles)(Auth);","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Auth.js"],"names":["React","Component","Fragment","AUTH_TOKEN","Mutation","useMutation","gql","withStyles","Container","Avatar","Card","Button","TextField","FormControlLabel","Checkbox","Link","Grid","Typography","SIGNUP_MUTATION","LOGIN_MUTATION","styles","theme","root","display","justifyContent","alignItems","paper","flexDirection","card","padding","spacing","avatar","margin","backgroundColor","palette","secondary","main","form","width","marginTop","submit","Auth","state","login","email","password","name","_saveUserData","token","localStorage","setItem","_confirm","data","signup","props","history","push","signIn","classes","lLOGIN_MUTATION","mutation","e","handleChange","setState","signUp","target","value","console","log","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,gBAArD,EAAuEC,QAAvE,EAAiFC,IAAjF,EAAuFC,IAAvF,EAA6FC,UAA7F,QAA+G,mBAA/G;AAEA,MAAMC,eAAe,GAAGZ,GAAI;;;;;;CAA5B;AAQA,MAAMa,cAAc,GAAGb,GAAI;;;;;;CAA3B;;AAQA,MAAMc,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAC;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,cAAc,EAAE,QAFb;AAGHC,IAAAA,UAAU,EAAE;AAHT,GADkB;AAMvBC,EAAAA,KAAK,EAAE;AACLH,IAAAA,OAAO,EAAE,MADJ;AAELI,IAAAA,aAAa,EAAE,QAFV;AAGLF,IAAAA,UAAU,EAAE;AAHP,GANgB;AAWvBG,EAAAA,IAAI,EAAC;AACHC,IAAAA,OAAO,EAAER,KAAK,CAACS,OAAN,CAAc,EAAd;AADN,GAXkB;AAcvBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAEX,KAAK,CAACS,OAAN,CAAc,CAAd,CADF;AAENG,IAAAA,eAAe,EAAEZ,KAAK,CAACa,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAde;AAkBvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AACW;AACfC,IAAAA,SAAS,EAAElB,KAAK,CAACS,OAAN,CAAc,CAAd;AAFP,GAlBiB;AAsBvBU,EAAAA,MAAM,EAAE;AACNR,IAAAA,MAAM,EAAEX,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAtBe,CAAL,CAApB;;AA2BA,MAAMW,IAAN,SAAmBxC,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3ByC,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAE,IADD;AACO;AACbC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,IAAI,EAAE;AAJA,KADmB;;AAAA,SAQ3BC,aAR2B,GAQXC,KAAK,IAAI;AACvBC,MAAAA,YAAY,CAACC,OAAb,CAAqB/C,UAArB,EAAiC6C,KAAjC;AACD,KAV0B;;AAAA,SAY3BG,QAZ2B,GAYhB,MAAMC,IAAN,IAAc;AACvB,YAAM;AAAEJ,QAAAA;AAAF,UAAY,KAAKN,KAAL,CAAWC,KAAX,GAAmBS,IAAI,CAACT,KAAxB,GAAgCS,IAAI,CAACC,MAAvD;;AACA,WAAKN,aAAL,CAAmBC,KAAnB;;AACA,WAAKM,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAyB,GAAzB;AACD,KAhB0B;;AAAA,SA4B3BC,MA5B2B,GA4BjBC,OAAD,IAAa;AACpB,aACE,oBAAC,QAAD;AACA,QAAA,QAAQ,EAAEC,eADV;AAEA,QAAA,SAAS,EAAE;AAAEf,UAAAA,KAAF;AAASC,UAAAA,QAAT;AAAmBC,UAAAA;AAAnB,SAFX;AAGA,QAAA,WAAW,EAAEM,IAAI,IAAI,KAAKD,QAAL,CAAcC,IAAd,CAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKCQ,QAAQ,IACT;AAAK,QAAA,SAAS,EAAEF,OAAO,CAAChC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEgC,OAAO,CAAC3B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAIA,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJA,EAOA;AAAM,QAAA,SAAS,EAAE2B,OAAO,CAACrB,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAGwB,CAAD,IAAK;AAAC,eAAKC,YAAL,CAAkBD,CAAlB;AAAqB,SADvC;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,SAAS,MALX;AAME,QAAA,EAAE,EAAC,OANL;AAOE,QAAA,KAAK,EAAC,eAPR;AAQE,QAAA,IAAI,EAAC,OARP;AASE,QAAA,YAAY,EAAC,OATf;AAUE,QAAA,SAAS,MAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAaE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAGA,CAAD,IAAK;AAAC,eAAKC,YAAL,CAAkBD,CAAlB;AAAqB,SADvC;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,SAAS,MALX;AAME,QAAA,IAAI,EAAC,UANP;AAOE,QAAA,KAAK,EAAC,UAPR;AAQE,QAAA,IAAI,EAAC,UARP;AASE,QAAA,EAAE,EAAC,UATL;AAUE,QAAA,YAAY,EAAC,kBAVf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAyBE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,SAAS,EAAEH,OAAO,CAAClB,MALrB;AAME,QAAA,OAAO,EAAGqB,CAAD,IAAM;AAAC,eAAKrB,MAAL,CAAYqB,CAAZ;AAAe,SANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzBF,EAmCE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,OAAO,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,EAME,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKE,QAAL,CAAc;AAACpB,YAAAA,KAAK,EAAE;AAAR,WAAd;AAA8B,SAA7D;AAA+D,QAAA,OAAO,EAAC,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gCADH,CADF,CANF,CAnCF,CAPA,CANA,CADF;AAkED,KA/F0B;;AAAA,SAiG3BqB,MAjG2B,GAiGjBN,OAAD,IAAa;AACpB,aACE;AAAK,QAAA,SAAS,EAAEA,OAAO,CAAChC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEgC,OAAO,CAAC3B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAIA,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJA,EAOA;AAAM,QAAA,SAAS,EAAE2B,OAAO,CAACrB,IAAzB;AAA+B,QAAA,UAAU,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAGwB,CAAD,IAAK;AAAC,eAAKC,YAAL,CAAkBD,CAAlB;AAAqB,SADvC;AAEE,QAAA,YAAY,EAAC,MAFf;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,SAAS,MANX;AAOE,QAAA,EAAE,EAAC,MAPL;AAQE,QAAA,KAAK,EAAC,MARR;AASE,QAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAcE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAGA,CAAD,IAAK;AAAC,eAAKC,YAAL,CAAkBD,CAAlB;AAAqB,SADvC;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,EAAE,EAAC,OALL;AAME,QAAA,KAAK,EAAC,eANR;AAOE,QAAA,IAAI,EAAC,OAPP;AAQE,QAAA,YAAY,EAAC,OARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,EA0BE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,QAAQ,EAAGA,CAAD,IAAK;AAAC,eAAKC,YAAL,CAAkBD,CAAlB;AAAqB,SADvC;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,KAAK,EAAC,UANR;AAOE,QAAA,IAAI,EAAC,UAPP;AAQE,QAAA,EAAE,EAAC,UARL;AASE,QAAA,YAAY,EAAC,kBATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CA1BF,CADF,EAyCE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,SAAS,EAAEH,OAAO,CAAClB,MALrB;AAME,QAAA,OAAO,EAAGqB,CAAD,IAAM;AAAC,eAAKrB,MAAL,CAAYqB,CAAZ;AAAe,SANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAzCF,EAmDE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,GAAX;AAAe,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKE,QAAL,CAAc;AAACpB,YAAAA,KAAK,EAAE;AAAR,WAAd;AAA6B,SAA5D;AAA8D,QAAA,OAAO,EAAC,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CADF,CAnDF,CAPA,CADF;AAqED,KAvK0B;;AAAA,SAqL3BQ,QArL2B,GAqLhB,YAAY,CACrB;AACD,KAvL0B;;AAAA,SAyL3BJ,aAzL2B,GAyLXC,KAAK,IAAI;AACvBC,MAAAA,YAAY,CAACC,OAAb,CAAqB/C,UAArB,EAAiC6C,KAAjC;AACD,KA3L0B;AAAA;;AAkB3Bc,EAAAA,YAAY,CAACD,CAAD,EAAG;AACb,SAAKE,QAAL,CAAc;AAAC,OAACF,CAAC,CAACI,MAAF,CAASnB,IAAV,GAAiBe,CAAC,CAACI,MAAF,CAASC;AAA3B,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAjB;AACD;;AAED,QAAMF,MAAN,CAAaqB,CAAb,EAAe;AACbA,IAAAA,CAAC,CAACQ,cAAF;AAED;;AA+IDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE3B,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,QAAmC,KAAKJ,KAA9C;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;AACA,WACA,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,SAAS,EAAEI,OAAO,CAACpC,IAA/C;AAAqD,MAAA,QAAQ,EAAC,IAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAEoC,OAAO,CAAC9B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGe,KAAK,GAAG,KAAKc,MAAL,CAAYC,OAAZ,CAAH,GAA0B,KAAKM,MAAL,CAAYN,OAAZ,CADlC,CADF,CADA;AAOD;;AAnL0B;;AA8L7B,eAAenD,UAAU,CAACa,MAAD,CAAV,CAAmBqB,IAAnB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { AUTH_TOKEN } from '../utils/constants'\nimport { Mutation, useMutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n//STYLING\nimport { withStyles } from '@material-ui/core/styles';\nimport { Container, Avatar, Card, Button, TextField, FormControlLabel, Checkbox, Link, Grid, Typography } from '@material-ui/core';\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nconst styles = theme => ({\n  root:{\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  card:{\n    padding: theme.spacing(10)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n});\n\nclass Auth extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n\n  _confirm = async data => {\n    const { token } = this.state.login ? data.login : data.signup\n    this._saveUserData(token)\n    this.props.history.push(`/`)\n  }\n\n  handleChange(e){\n    this.setState({[e.target.name]: e.target.value})\n    console.log(this.state)\n  }\n\n  async submit(e){\n    e.preventDefault();\n\n  }\n\n  signIn = (classes) => {\n    return(\n      <Mutation\n      mutation={lLOGIN_MUTATION}\n      variables={{ email, password, name }}\n      onCompleted={data => this._confirm(data)}\n    >\n      {mutation => (\n      <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n        \n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign in\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          onChange={(e)=>{this.handleChange(e)}}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"email\"\n          label=\"Email Address\"\n          name=\"email\"\n          autoComplete=\"email\"\n          autoFocus\n        />\n        <TextField\n          onChange={(e)=>{this.handleChange(e)}}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(e)=> {this.submit(e)}}\n        >\n          Sign In\n        </Button>\n        <Grid container>\n          <Grid item xs>\n            <Link href=\"#\" variant=\"body2\">\n              Forgot password?\n            </Link>\n          </Grid>\n          <Grid item>\n            <Link href=\"#\" onClick={() => {this.setState({login: false})}} variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n    )}\n    </Mutation>\n    )\n  }\n\n  signUp = (classes) => {\n    return(\n      <div className={classes.paper}>\n      <Avatar className={classes.avatar}>\n\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Sign up\n      </Typography>\n      <form className={classes.form} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12} >\n            <TextField\n              onChange={(e)=>{this.handleChange(e)}}\n              autoComplete=\"name\"\n              name=\"Name\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"Name\"\n              label=\"Name\"\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e)=>{this.handleChange(e)}}\n              variant=\"outlined\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              onChange={(e)=>{this.handleChange(e)}}\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(e)=> {this.submit(e)}}\n        >\n          Sign Up\n        </Button>\n        <Grid container justify=\"flex-end\">\n          <Grid item>\n            <Link href=\"#\" onClick={() => {this.setState({login: true})}} variant=\"body2\">\n              Already have an account? Sign in\n            </Link>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n    )\n  }\n\n  render() {\n    const { login, email, password, name } = this.state\n    const { classes } = this.props;\n    return (\n    <Container component=\"main\" className={classes.root} maxWidth=\"xs\">\n      <Card className={classes.card}>\n        {login ? this.signIn(classes) : this.signUp(classes)}\n      </Card>\n    </Container>\n    )\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this ðŸ”œ\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n\nexport default withStyles(styles)(Auth)"]},"metadata":{},"sourceType":"module"}