{"ast":null,"code":"var _jsxFileName = \"/Users/brieucjamain/Desktop/template/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { AUTH_TOKEN } from '../utils/constants';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`;\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`;\n\n_confirm = async data => {\n  const {\n    token\n  } = this.state.login ? data.login : data.signup;\n\n  this._saveUserData(token);\n\n  this.props.history.push(`/`);\n};\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      login: true,\n      // switch between Login and SignUp\n      email: '',\n      password: '',\n      name: ''\n    };\n\n    this._confirm = async () => {// ... you'll implement this ðŸ”œ\n    };\n\n    this._saveUserData = token => {\n      localStorage.setItem(AUTH_TOKEN, token);\n    };\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      name\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"mv3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, login ? 'Login' : 'Sign Up'), React.createElement(\"div\", {\n      className: \"flex flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, !login && React.createElement(\"input\", {\n      value: name,\n      onChange: e => this.setState({\n        name: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"Your name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: email,\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      type: \"text\",\n      placeholder: \"Your email address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      type: \"password\",\n      placeholder: \"Choose a safe password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flex mt3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Mutation, {\n      mutation: login ? LOGIN_MUTATION : SIGNUP_MUTATION,\n      variables: {\n        email,\n        password,\n        name\n      },\n      onCompleted: data => this._confirm(data),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, mutation => React.createElement(\"div\", {\n      className: \"pointer mr2 button\",\n      onClick: mutation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, login ? 'login' : 'create account')), React.createElement(\"div\", {\n      className: \"pointer button\",\n      onClick: () => this.setState({\n        login: !login\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, login ? 'need to create an account?' : 'already have an account?')));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/brieucjamain/Desktop/template/src/components/Login.js"],"names":["React","Component","AUTH_TOKEN","Mutation","gql","SIGNUP_MUTATION","LOGIN_MUTATION","_confirm","data","token","state","login","signup","_saveUserData","props","history","push","Login","email","password","name","localStorage","setItem","render","e","setState","target","value","mutation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { AUTH_TOKEN } from '../utils/constants'\nimport { Mutation } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`\n\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\n_confirm = async data => {\n    const { token } = this.state.login ? data.login : data.signup\n    this._saveUserData(token)\n    this.props.history.push(`/`)\n  }\n\nclass Login extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  render() {\n    const { login, email, password, name } = this.state\n    return (\n      <div>\n        <h4 className=\"mv3\">{login ? 'Login' : 'Sign Up'}</h4>\n        <div className=\"flex flex-column\">\n          {!login && (\n            <input\n              value={name}\n              onChange={e => this.setState({ name: e.target.value })}\n              type=\"text\"\n              placeholder=\"Your name\"\n            />\n          )}\n          <input\n            value={email}\n            onChange={e => this.setState({ email: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your email address\"\n          />\n          <input\n            value={password}\n            onChange={e => this.setState({ password: e.target.value })}\n            type=\"password\"\n            placeholder=\"Choose a safe password\"\n          />\n        </div>\n        <div className=\"flex mt3\">\n            <Mutation\n            mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n            variables={{ email, password, name }}\n            onCompleted={data => this._confirm(data)}\n            >\n            {mutation => (\n            <div className=\"pointer mr2 button\" onClick={mutation}>\n                {login ? 'login' : 'create account'}\n            </div>\n            )}\n            </Mutation>\n        <div\n            className=\"pointer button\"\n            onClick={() => this.setState({ login: !login })}\n        >\n    {login ? 'need to create an account?' : 'already have an account?'}\n</div>\n        </div>\n      </div>\n    )\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this ðŸ”œ\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}